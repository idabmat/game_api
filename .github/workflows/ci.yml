name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLIENT_ID: 123
      GOOGLE_CLIENT_SECRET: 456
      GUARDIAN_SECRET_KEY: 789
    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: 1.10.2
          otp-version: 22.2
      - name: Cache dependencies directory
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Dependencies
        run: mix deps.get
      - name: Cache build directory
        uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Compile
        run: mix compile
      - name: Check Format
        run: mix format --check-formatted
      - name: Check Style
        run: mix credo --strict
      - name: Run Tests
        run: mix test
      - name: Check Types
        run: mix dialyzer --halt-exit-status
  deploy:
    needs: tests
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Gigalixir CLI
        run: |
          sudo pip install gigalixir --ignore-installed six
          echo 'export PATH=~/.local/bin:$PATH' >> ~/.bash_profile
          source ~/.bash_profile
      - name: Setup Gigalixir
        env:
          GIGALIXIR_USER: ${{ secrets.GIGALIXIR_USER }}
          GIGALIXIR_TOKEN: ${{ secrets.GIGALIXIR_TOKEN }}
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP }}
        run: |
          git remote add gigalixir https://git.gigalixir.com/$GIGALIXIR_APP.git
          cat >> ~/.netrc <<EOF
          machine api.gigalixir.com
            login $GIGALIXIR_USER
            password $GIGALIXIR_TOKEN
          machine git.gigalixir.com
            login $GIGALIXIR_USER
            password $GIGALIXIR_TOKEN
          EOF
      - name: Deploy
        run: |
          git fetch --unshallow origin
          git push gigalixir master
